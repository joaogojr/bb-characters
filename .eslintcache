[{"C:\\Users\\joaog\\Desktop\\Nova pasta\\bb-characters\\src\\index.js":"1","C:\\Users\\joaog\\Desktop\\Nova pasta\\bb-characters\\src\\App.js":"2","C:\\Users\\joaog\\Desktop\\Nova pasta\\bb-characters\\src\\api.js":"3"},{"size":285,"mtime":1611142713165,"results":"4","hashOfConfig":"5"},{"size":5015,"mtime":1611144766643,"results":"6","hashOfConfig":"5"},{"size":136,"mtime":1611142713153,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"scz9e0",{"filePath":"11","messages":"12","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\joaog\\Desktop\\Nova pasta\\bb-characters\\src\\index.js",[],["16","17"],"C:\\Users\\joaog\\Desktop\\Nova pasta\\bb-characters\\src\\App.js",["18","19","20","21","22"],"import React, { Component } from 'react';\r\nimport './App.css';\r\nimport api from './api';\r\nimport capa from './images/capa.jpg';\r\nimport polaroid from './images/polaroid.png';\r\nimport oldpaper from './images/oldpaper.jpg';\r\nimport deceased from './images/deceased.png';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    charData: [],\r\n    epData: [],\r\n    selected: {},\r\n    selectedEp: []\r\n  }\r\n  // função para o recebimento das informações da API e Estado\r\n  async componentDidMount() {\r\n    const responseChar = await api.get('characters?category=Breaking+Bad');\r\n    const responseEp = await api.get('episodes?category=Breaking+Bad');\r\n    this.setState({ charData: responseChar.data });\r\n    this.setState({ epData: responseEp.data });\r\n    const selectedConst = { name: this.state.charData[0].name, nickname: this.state.charData[0].nickname, birthday: this.state.charData[0].birthday, status: this.state.charData[0].status, url: this.state.charData[0].img };\r\n    this.setState({\r\n      selected: selectedConst\r\n    })\r\n    this.setEpisodes(selectedConst);\r\n    if (selectedConst.status === 'Deceased') {\r\n      document.querySelector('#died').classList.remove('hidden');\r\n    } else {\r\n      document.querySelector('#died').classList.add('hidden');\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        {/* Dropdown */}\r\n        <div className=\"custom-dropdown\">\r\n          <select onChange={this.selectCharacter}>{this.state.charData.map((character, i) => \r\n            <option key={i} value={i}>{character.name}</option>\r\n          )}\r\n          </select>\r\n        </div>\r\n        {/* Card */}\r\n        <div className=\"card\">\r\n          {/* Capa do card */}\r\n          <div className=\"imgBox\">\r\n            <img className=\"imgCapa\" src={capa}/>\r\n          </div>\r\n          {/* Conteúdo do card */}\r\n          <div className=\"detalhes\">\r\n            <img className=\"imgOldpaper\" src={oldpaper}/>\r\n            <div className='row1'>\r\n              <div>\r\n                <img className=\"imgPolaroid\" src={polaroid}/>\r\n                <img className=\"imgData\" src={this.state.selected.url}/>\r\n              </div>\r\n              <div>\r\n                <div className=\"nameBox\">\r\n                  <div className=\"desc\">\r\n                    Name:\r\n                  </div>\r\n                  <div className=\"info\">\r\n                    {this.state.selected.name}\r\n                  </div>\r\n                </div>\r\n                <div className=\"nicknameBox\">\r\n                  <div className=\"desc\">\r\n                    Nickname:\r\n                  </div>\r\n                  <div className=\"info\">\r\n                  {this.state.selected.nickname}\r\n                  </div>\r\n                </div>\r\n                <div className=\"birthdayBox\">\r\n                  <div className=\"desc\">\r\n                    Birthday:\r\n                  </div>\r\n                  <div className=\"info\">\r\n                  {this.state.selected.birthday}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"statusBox\">\r\n              <div className=\"desc\">\r\n                Status:\r\n              </div>\r\n              <div className=\"info\">\r\n              {this.state.selected.status}\r\n              </div>\r\n            </div>\r\n            <div className=\"episodesBox\">\r\n              <div className=\"desc\">\r\n                Episodes:\r\n              </div>\r\n              <PerfectScrollbar className=\"info\">\r\n               <ul>\r\n               {this.state.selectedEp.map((ep, i) => \r\n                <li key={i}>{ep}</li>\r\n                  )}\r\n               </ul>\r\n              </PerfectScrollbar>\r\n            </div>\r\n            <img id='died' className=\"diedLogo hidden\" src={deceased}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  // Função de seleção de personagem\r\n  selectCharacter = (data) => {\r\n    const i = data.target.value;\r\n    const selectedConst = { name: this.state.charData[i].name, nickname: this.state.charData[i].nickname, birthday: this.state.charData[i].birthday, status: this.state.charData[i].status, url: this.state.charData[i].img };\r\n    this.setState({\r\n      selected: selectedConst\r\n    });\r\n    this.setEpisodes(selectedConst);\r\n  }\r\n  // Função de seleção de episódios\r\n  setEpisodes = (selectedChar) => {\r\n    const epArray = [];\r\n    this.state.epData.forEach((ep) => {\r\n      ep.characters.forEach((character) => {\r\n        if (character === selectedChar.name) {\r\n          epArray.push(`Episode ${ep.episode} - Season ${ep.season}`);\r\n        }\r\n      })\r\n    })\r\n    if(epArray.length === 0) {\r\n      epArray.push(`Unknown`);\r\n    }\r\n    this.setState({selectedEp: epArray});\r\n    if (selectedChar.status === 'Deceased') {\r\n      document.querySelector('#died').classList.remove('hidden');\r\n    } else {\r\n      document.querySelector('#died').classList.add('hidden');\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\joaog\\Desktop\\Nova pasta\\bb-characters\\src\\api.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":51,"column":13,"nodeType":"29","endLine":51,"endColumn":50},{"ruleId":"27","severity":1,"message":"28","line":55,"column":13,"nodeType":"29","endLine":55,"endColumn":58},{"ruleId":"27","severity":1,"message":"28","line":58,"column":17,"nodeType":"29","endLine":58,"endColumn":62},{"ruleId":"27","severity":1,"message":"28","line":59,"column":17,"nodeType":"29","endLine":59,"endColumn":73},{"ruleId":"27","severity":1,"message":"28","line":108,"column":13,"nodeType":"29","endLine":108,"endColumn":72},"no-native-reassign",["30"],"no-negated-in-lhs",["31"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]